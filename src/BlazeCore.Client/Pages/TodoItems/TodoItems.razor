@page "/todo-items"
@using BlazeCore.Shared.TodoItem
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Todo Items</PageTitle>

<h1>Todo Items</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_items == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="col-auto">
        <a class="btn btn-primary" href="javascript:void(0);" @onclick="NewItem"><i class="fas fa-plus me-2"></i>Add New</a>
    </div>

    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Created at</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in _items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td>@item.CreatedAt.ToShortDateString()</td>
                <td>
                    <a class="btn btn-secondary" href="javascript:void(0);" @onclick="() => EditItem(item.Id)"><i class="fas fa-edit me-2"></i>Edit</a>    
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private TodoItemResponse[]? _items;

    protected override async Task OnInitializedAsync()
    {
        _items = await Http.GetFromJsonAsync<TodoItemResponse[]>("api/todo-items");
    }

    private void NewItem()
    {
        NavigationManager.NavigateTo("/todo-items/add");
    }

    private void EditItem(string id)
    {
        NavigationManager.NavigateTo($"/todo-items/edit/{id}");
    }

}